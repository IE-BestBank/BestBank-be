{
    "info": {
        "name": "Improved BestBank API Collection",
        "description": "Comprehensive functional tests for BestBank backend endpoints.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "General",
            "item": [
                {
                    "name": "Hello World",
                    "request": {
                        "method": "GET",
                        "url": "{{base_url}}/",
                        "description": "Check if the backend is running."
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response contains Hello, World!', function () {",
                                    "    pm.expect(pm.response.text()).to.include('Hello, World!');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Skull Endpoint",
                    "request": {
                        "method": "GET",
                        "url": "{{base_url}}/skull",
                        "description": "Verify database connection details are exposed."
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response contains Database URL', function () {",
                                    "    pm.expect(pm.response.text()).to.include('Database URL:');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Accounts",
            "item": [
                {
                    {
  "name": "Create Account",
  "request": {
    "method": "POST",
    "url": "{{base_url}}/accounts",
    "header": [
      {
        "key": "Content-Type",
        "value": "application/json"
      }
    ],
    "body": {
      "mode": "raw",
      "raw": "{\"name\": \"Savings\", \"currency\": \"USD\", \"country\": \"US\", \"user_id\": {{user_id}}}"
    },
    "description": "Create a new account for a registered user."
  },
  "event": [
    {
      "listen": "test",
      "script": {
        "exec": [
          "pm.test('Status code is 201', function () {",
          "    pm.response.to.have.status(201);",
          "});",
          "pm.test('Account creation response contains ID', function () {",
          "    let jsonResponse = pm.response.json();",
          "    pm.expect(jsonResponse).to.have.property('id');",
          "});"
        ],
        "type": "text/javascript"
      }
    }
  ]
}
,
                {
                    "name": "Get All Accounts",
                    "request": {
                        "method": "GET",
                        "url": "{{base_url}}/accounts",
                        "description": "Retrieve all accounts."
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Accounts list is an array', function () {",
                                    "    pm.expect(pm.response.json().accounts).to.be.an('array');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "Register User",
                    "request": {
                        "method": "POST",
                        "url": "{{base_url}}/users/register",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"username\": \"user_{{$timestamp}}\", \"password\": \"password123\", \"password2\": \"password123\"}"
                        },
                        "description": "Register a new user."
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 201', function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "pm.test('Response contains user ID', function () {",
                                    "    let jsonResponse = pm.response.json();",
                                    "    pm.expect(jsonResponse).to.have.property('id');",
                                    "    pm.environment.set('user_id', jsonResponse.id);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Login User",
                    "request": {
                        "method": "POST",
                        "url": "{{base_url}}/users/login",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"username\": \"user_{{$timestamp}}\", \"password\": \"password123\"}"
                        },
                        "description": "Login with a registered user."
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response contains user details', function () {",
                                    "    pm.expect(pm.response.json()).to.have.property('id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                }
            ]
        }
    ]
}
